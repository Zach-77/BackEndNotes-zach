503. 下一个更大元素 II
给定一个循环数组（最后一个元素的下一个元素是数组的第一个元素），输出每个元素的下一个更大元素。数字 x 的下一个更大的元素是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 -1。

示例 1:

输入: [1,2,1]
输出: [2,-1,2]
解释: 第一个 1 的下一个更大的数是 2；
数字 2 找不到下一个更大的数； 
第二个 1 的下一个最大的数需要循环搜索，结果也是 2。
注意: 输入数组的长度不会超过 10000。


class Solution {
    public int[] nextGreaterElements(int[] nums) {
        int[] out=new int[nums.length];
        Stack<Integer> stack=new Stack<>();
        int current=0;
        int index;
        for(int point=0;point<2*nums.length;point++){
            index=point%nums.length;
            while(!stack.empty() && nums[index]>nums[stack.peek()]){
               
               if(nums[index]>nums[stack.peek()]){
                current=stack.pop();
                out[current]=nums[index];
               }
            }

            if(!stack.empty() && index==stack.peek())
            {
                while(true){
                out[stack.peek()]=-1;
                stack.pop();
                if(stack.empty()) break;
                }
            }
  
            if(point<nums.length){
               stack.push(point);
            }    
        }
        return out;
                

    }
}
